#!/usr/bin/env node
// -*- mode: javascript -*-
// vi: set ft=javascript :

var program = require('commander')
  , matcha = require('..')
  , utils = matcha.utils;

var Interface = require('../lib/matcha/interface');

program
  .version(matcha.version)
  .usage('[options] [files]')
  .description('Run a suite of benchmarks.')
  .option('-R, --reporter <name>', 'specify the reporter to use', 'clean')
  .option('-I, --interface <name>', 'specify the interface to expect', 'bdd')
  .option('--interfaces', 'display available interfaces')
  .option('--reporters', 'display available reporters  ');

program._name = 'matcha';

program.parse(process.argv);

runSuite(program);

function runSuite (argv) {

  var showInterfaces = argv.interfaces;
  if (showInterfaces) {
    console.log();
    console.log('    bdd     - suite/bench style');
    console.log('    exports - commonjs style interface');
    process.exit();
  }

  var showReporters = argv.reporters;
  if (showReporters) {
    console.log();
    console.log('    clean - clean list');
    console.log('    plain - plain text list');
    console.log('    csv   - comma seperated values');
    process.exit();
  }

  var path = require('path')
    , fs = require('fs')
    , exists = fs.existsSync || path.existsSync
    , cwd = process.cwd()
    , files = argv.args
    , re = /\.js$/;

  if (!files.length) {
    if (!exists(path.join(cwd, 'benchmark'))) {
      console.error('Matcha: cannot find default `benchmark` folder.');
      process.exit(1);
    }

    files = fs.readdirSync(path.join(cwd, 'benchmark')).filter(function(path){
      return path.match(re);
    }).map(function(_p){
      return path.join('benchmark', _p);
    });
  }

  files = files.map(function(_p){
    _p = require.resolve(path.join(cwd, _p));
    return _p;
  });

  var style = argv.interface
    , suite = new matcha.Suite()
    , reporter;

  // load reporter
  try {
    var rep = argv.reporter;

    var repPath;

    try {
      repPath = require.resolve('../lib/matcha/reporters/' + rep);
    } catch(e) {
      try {
        if (rep.charAt(0) === '.') {
          rep = require('path').resolve(cwd, rep);
        }

        repPath = require.resolve(rep);
      } catch(e) {}
    }

    if (!repPath) {
      console.error('reporter "' + rep + '" does not exist');
      process.exit(1); // Exit with an error code
    }

    reporter = require(repPath);
  } catch (err) {
    console.error('Unable to load reporter "' + rep + '". Error: ' + (err.stack || err));
    process.exit(1);
  }

  new Interface(suite, { style: style });
  load(files, function () {
    run(suite, process.exit);
  });

  function load (files, cb) {
    var after = files.length;
    files.forEach(function (file) {
      delete require.cache[file];
      suite.emit('pre-require');
      suite.emit('require', require(file));
      --after || cb();
    });
  }

  function run (suite, cb) {
    var runner = new matcha.Runner(suite);
    reporter(runner, utils);
    runner.run(cb);
  }

}
